#!/usr/bin/env php
<?php

include_once __DIR__ . '/libs/autoload.php';

$parser = new Parser();
$parser->add(
	'v', 'verbose',
	Parser::OPTION,
	$verbose,
	'Verbose run'
);
$parser->add(
	'c', 'no-color',
	Parser::OPTION,
	$colorful,
	'No color'
);
$parser->add(
	'm', 'minify',
	Parser::OPTION,
	$minify,
	'Minify HTML'
);
$parser->add(
	'S', 'short',
	Parser::OPTION,
	$short,
	'Short open PHP tag'
);
$parser->add(
	'a', 'src-ext',
	Parser::VARIABLE,
	$src_ext,
	'Source ext name (default: tpl)',
	'tpl',
	'ext'
);
$parser->add(
	'b', 'dist-ext',
	Parser::VARIABLE,
	$dist_ext,
	'Dist ext name (default: phtml)',
	'phtml',
	'ext'
);
$parser->add(
	's', 'source',
	Parser::VARIABLE,
	$src,
	'Source path (default: ./templates_src)',
	'./templates_src',
	'path'
);
$parser->add(
	'd', 'dist',
	Parser::VARIABLE,
	$dist,
	'Dist path (default: ./templates)',
	'./templates',
	'path'
);
$parser->add(
	'D', 'display',
	Parser::VARIABLE,
	$display,
	'Display function or method (default: include)',
	'include',
	'func'
);
$parser->parse();

new logging(!$colorful);

if (!is_dir($src)) {
	logging::error('"'.$src.'" is not directory.');
	exit(1);
}

if (!is_dir($dist)) {
	logging::error('"'.$dist.'" is not directory.');
	exit(1);
}

glob2($src, $files, $src_ext);

if (count($files) == 0) {
	logging::info('Nothing in "'.$src.'".');
	exit(0);
}

foreach ($files as &$path) {
	if ($verbose) logging::info('Processing "'.$src.$path.'".');
	$content = file_get_contents($src.$path);
	$error = 0;
	$content = run_all_functions_parser($content,
		function ($msg) use ($error) {
			$error = 1;
			logging::error($msg);
		},
		$display
	);
	if ($short) $content = preg_replace("/\<\?php/", '<?', $content);
	$save_fn  = $dist.substr($path,0,-strlen($src_ext)).$dist_ext;
	$save_dir = substr($save_fn, 0, -strlen(basename($save_fn)));
	if (!is_dir($save_dir)) {
		if ($verbose) logging::info('"'.$save_dir.'" not exist, create.');
		mkdir($save_dir);
	}
	if ($verbose) logging::info('Done. Save to "'.$save_fn.'".');
	if ($minify) $content = minify($content);
	file_put_contents($save_fn, $content);
}

if ($verbose) logging::info('All done.');
